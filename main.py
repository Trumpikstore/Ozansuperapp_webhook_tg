from fastapi import FastAPI, Request, HTTPException
import logging
import httpx
import os
import json

app = FastAPI()

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger("ozan-webhook")

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")
TELEGRAM_API_URL = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ‚Äî —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ 404 –Ω–∞ "/"
@app.get("/")
async def root():
    return {"status": "‚úÖ Ozan webhook server is running"}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram-—Å–æ–æ–±—â–µ–Ω–∏—è
async def send_telegram_message(message: str):
    if not TELEGRAM_BOT_TOKEN or not TELEGRAM_CHAT_ID:
        logger.error("‚ùå TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return
    async with httpx.AsyncClient() as client:
        try:
            await client.post(
                TELEGRAM_API_URL,
                json={"chat_id": TELEGRAM_CHAT_ID, "text": message}
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")

# –í–µ–±—Ö—É–∫ Ozan
@app.post("/webhook/ozan")
async def ozan_webhook(request: Request):
    try:
        payload = await request.json()
    except Exception as e:
        logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ JSON: %s", str(e))
        raise HTTPException(status_code=400, detail="Invalid JSON")

    logger.info("‚úÖ –í–µ–±—Ö—É–∫ –ø–æ–ª—É—á–µ–Ω:\n" + json.dumps(payload, indent=2))

    # –†–∞—Å–ø–∞—Ä—Å–∏ –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è
    transaction_type = payload.get("type", "").lower()
    status = payload.get("status")
    user_id = payload.get("user_id", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    amount = payload.get("amount", "‚Äî")
    currency = payload.get("currency", "TRY")
    transaction_id = payload.get("transaction_id", "N/A")

    # –°–æ—Å—Ç–∞–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if transaction_type == "deposit" and status == "SUCCESS":
        msg = (
            f"üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}\n"
            f"–°—É–º–º–∞: {amount} {currency}\n"
            f"–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è: {transaction_id}"
        )
    elif transaction_type == "transaction" and status == "SUCCESS":
        msg = (
            f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç {user_id}\n"
            f"–°—É–º–º–∞: {amount} {currency}\n"
            f"–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è: {transaction_id}"
        )
    else:
        msg = f"‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω webhook: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–ª–∏ –Ω–µ—É—Å–ø–µ—à–Ω—ã–π —Å—Ç–∞—Ç—É—Å\n{json.dumps(payload, indent=2)}"

    await send_telegram_message(msg)
    return {"status": "received"}
